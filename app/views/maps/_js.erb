<script src="https://maps.googleapis.com/maps/api/js"></script>

<script>
  window.markers =[];
  window.map;
  infoWindow = new google.maps.InfoWindow();


  function initialize() {
    var mapCanvas = document.getElementById('map');
    var mapOptions = {
      center: new google.maps.LatLng(45, 39),
      zoom: 10,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
    map = new google.maps.Map(mapCanvas, mapOptions);
    addmarkers();
    
  }
  google.maps.event.addDomListener(window, 'load', initialize);


  function addmarkers() {
    $.ajax(
    {
      type: "GET",
      dataType: 'json',
      url: 'get_places',
      success: function (data, textStatus, jqXHR) {  
        for (var i = 0; i < data.length; i++) {
          var myLatlng = new google.maps.LatLng(data[i].latitude,data[i].longitude);
          var marker = new google.maps.Marker({
            position: myLatlng,
            title:data[i].name,
            params: {
              place: data[i].id,
              name: data[i].name,
              latitude: data[i].latitude,
              longitude: data[i].longitude,
              locality: data[i].locality
            },
            map : map
          });
          markers.push(marker);
          google.maps.event.addListener(markers[markers.length-1], 'click', showMarkerInfo);
        };
        // var markerCluster = new MarkerClusterer(map, markers);
      },
      error: function (jqXHR, textStatus, errorThrown) {
        document.innerHTML = "Ошибка! Нет данных или проблемы с соединением: "+textStatus;
      }
    });
  }

  function showMarkerInfo(event) {
    // showInfoWindow(this,event.latLng);
    var contentString = $('#cluster_chart').html();
    contentString = contentString.replace('null', '');
    infoWindow.setContent(contentString);
    infoWindow.setPosition(event.latLng);


    infoWindow.open(map);
    get_chart_data(this);
  }

  function get_chart_data(marker) {
    $.ajax(
    {
      type: "GET",
      dataType: 'json',
      url: 'get_place_details?place='+marker.params.place,
      success: function (data, textStatus, jqXHR) {  
        paint_chart(data, 'line', marker.params.name, marker.params.locality);
      },
      error: function (jqXHR, textStatus, errorThrown) {
        document.innerHTML = "Ошибка! Нет данных или проблемы с соединением: "+textStatus;
      }
    });
  }

  function change_chart_type (but) {
    if ($(but).hasClass('btn-primary')) {return};
    hide_id = $('.btn-primary').attr('id');
    $('.btn-primary').toggleClass('btn-default');
    $('.btn-primary').toggleClass('btn-primary');
    $(but).toggleClass('btn-default');
    $(but).toggleClass('btn-primary');
    show_id = $(but).attr('id');
    $('#'+ hide_id +'_chart').hide();
    $('#'+ show_id +'_chart').show();
    // paint_chart()
  }

  function paint_chart (data, type, title, subtitle) {
    xaxis_arr = $.map(data.weight, function(el) { return el.date_from });
    weight_series_data = $.map(data.weight, function(el) { return el.total_weight });

    weight_chart_options = {
      title: {
        text: title
      },
      subtitle: {
        text: subtitle
      },
      xAxis: {
        categories: xaxis_arr
      },
      yAxis: {
        title: {
          text: ''
        },
        min: 0,
      },
      credits: {
        enabled: false
      },
      tooltip: {
        valueSuffix: ' кг'
      },
      series: [{
        name: 'вес',
        data: weight_series_data
      }]
    }

    $('#weight_chart').highcharts(weight_chart_options);

    fish_chart_options = {
      title: {
        text: title
      },
      subtitle: {
        text: subtitle
      },
      // xAxis: {
      //   categories: xaxis_arr
      // },
      yAxis: {
        title: {
          text: ''
        },
        min: 0,
      },
      credits: {
        enabled: false
      },
      tooltip: {
        valueSuffix: ' шт'
      }
    }
    
    fish_series_data = [];
    fishes = [];
    $.each(data.fish_date, function (index,value) {
      if ($.inArray(value.name, fishes) !=-1) {
        ii = fish_series_data.map(function(e) { return e.name; }).indexOf(value.name);
        fish_series_data[ii].data.push([value.date_from, value.cnt]);
      }
      else {
        fish_series_data.push({
          name: value.name,
          data: [[value.date_from, value.cnt]]
        });
        fishes.push(value.name)
      }
    });
    fish_chart_options.series = fish_series_data;

    $('#fish_chart').highcharts(fish_chart_options);

    bait_chart_options = {
      chart: {
          plotBackgroundColor: null,
          plotBorderWidth: null,
          plotShadow: false,
          type: 'pie'
      },
      title: {
        text: title
      },
      plotOptions: {
        pie: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: {
            enabled: false
          },
          showInLegend: true
        }
      },
      tooltip: {
          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
      },
      subtitle: {
        text: subtitle
      },
      credits: {
        enabled: false
      }
    }

    bait_chart_series = [{
      name: 'Наживки',
      colorByPoint: true,
      data: []
    }]
    $.each(data.bait, function (index,value) {
      bait_chart_series[0].data.push({
        name: value.name,
        y: value.cnt
      })
    })
    bait_chart_options.series = bait_chart_series;

    $('#bait_chart').highcharts(bait_chart_options);
  }

</script>

